import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { Grid, GridItem, Card, Section, Button } from './ui';
import { Container, Wrapper } from './layout';
import '@/styles/responsive-test.css';
/**
 * Responsive Test Component
 * Tests all responsive breakpoints and grid behavior
 */
export const ResponsiveTest = () => {
    return (_jsx("div", { className: "responsive-test", children: _jsx(Section, { className: "breakpoint-test", children: _jsxs(Container, { children: [_jsx("h2", { children: "Responsive Breakpoint Test" }), _jsx("p", { children: "This section tests all responsive breakpoints and grid behavior." }), _jsxs("div", { className: "grid-test", children: [_jsx("h3", { children: "Grid System Test" }), _jsx(Grid, { columns: 1, gap: "medium", children: _jsx(GridItem, { children: _jsxs(Card, { children: [_jsx("h4", { children: "Mobile: 1 Column" }), _jsx("p", { children: "This should display as 1 column on mobile devices (below 768px)." }), _jsx(Button, { variant: "primary", children: "Test Button" })] }) }) })] }), _jsxs("div", { className: "tablet-test", children: [_jsx("h3", { children: "Tablet Breakpoint Test (768px+)" }), _jsxs(Grid, { columns: 2, gap: "medium", children: [_jsx(GridItem, { children: _jsxs(Card, { children: [_jsx("h4", { children: "Tablet: 2 Columns" }), _jsx("p", { children: "This should display as 2 columns on tablet devices (768px and above)." }), _jsx(Button, { variant: "secondary", children: "Tablet Button" })] }) }), _jsx(GridItem, { children: _jsxs(Card, { children: [_jsx("h4", { children: "Tablet: 2 Columns" }), _jsx("p", { children: "Second column for tablet layout testing." }), _jsx(Button, { variant: "outline", children: "Second Button" })] }) })] })] }), _jsxs("div", { className: "desktop-test", children: [_jsx("h3", { children: "Desktop Breakpoint Test (1024px+)" }), _jsxs(Grid, { columns: 3, gap: "large", children: [_jsx(GridItem, { children: _jsxs(Card, { children: [_jsx("h4", { children: "Desktop: 3 Columns" }), _jsx("p", { children: "This should display as 3 columns on desktop devices (1024px and above)." }), _jsx(Button, { variant: "primary", children: "Desktop Button 1" })] }) }), _jsx(GridItem, { children: _jsxs(Card, { children: [_jsx("h4", { children: "Desktop: 3 Columns" }), _jsx("p", { children: "Second column for desktop layout testing." }), _jsx(Button, { variant: "secondary", children: "Desktop Button 2" })] }) }), _jsx(GridItem, { children: _jsxs(Card, { children: [_jsx("h4", { children: "Desktop: 3 Columns" }), _jsx("p", { children: "Third column for desktop layout testing." }), _jsx(Button, { variant: "outline", children: "Desktop Button 3" })] }) })] })] }), _jsxs("div", { className: "spacing-test", children: [_jsx("h3", { children: "Responsive Spacing Test" }), _jsxs("div", { className: "spacing-demo", children: [_jsxs("div", { className: "spacing-item mobile-spacing", children: [_jsx("h4", { children: "Mobile Spacing" }), _jsx("p", { children: "Uses mobile-first spacing tokens" })] }), _jsxs("div", { className: "spacing-item tablet-spacing", children: [_jsx("h4", { children: "Tablet Spacing" }), _jsx("p", { children: "Uses tablet spacing tokens (768px+)" })] }), _jsxs("div", { className: "spacing-item desktop-spacing", children: [_jsx("h4", { children: "Desktop Spacing" }), _jsx("p", { children: "Uses desktop spacing tokens (1024px+)" })] })] })] }), _jsxs("div", { className: "container-test", children: [_jsx("h3", { children: "Container Constraints Test" }), _jsx(Wrapper, { children: _jsxs("div", { className: "container-demo", children: [_jsx("p", { children: "This content should be constrained by the container max-width and centered on larger screens." }), _jsx("p", { children: "The container should have proper padding and max-width constraints according to the design system." })] }) })] })] }) }) }));
};
//# sourceMappingURL=ResponsiveTest.js.map